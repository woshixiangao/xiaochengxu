{"version":3,"sources":["Game.js.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","teplay","getComponent","console","log","stopAllActions","timer","starDuration","score","groundY","y","height","spawnNewStar","newStar","instantiate","setLocalZOrder","node","addChild","game","setPosition","getNewStarPosition","random0To1","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","start","gainScore","string","toString","audioEngine","playEffect","update","dt","gameOver","director","loadScene"],"mappings":"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","file":"Game.js.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n                // 这个属性引用了星星预制资源\r\n                starPrefab: {\r\n                    default: null,\r\n                    type: cc.Prefab\r\n                },\r\n                // 星星产生后消失时间的随机范围\r\n                maxStarDuration: 0,\r\n                minStarDuration: 0,\r\n                // 地面节点，用于确定星星生成的高度\r\n                ground:{\r\n                    default: null,\r\n                    type: cc.Node\r\n                },\r\n                // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n                player:{\r\n                    default: null,\r\n                    type: cc.Node\r\n                },\r\n                scoreDisplay: {\r\n                    default: null,\r\n                    type: cc.Label\r\n                },\r\n                // 得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    onLoad: function () {\r\n        // this.player.stopAllActions();\r\n        var teplay=this.player.getComponent('Player')\r\n        console.log('====onLoad=========')\r\n        console.log(teplay)\r\n        teplay.stopAllActions()\r\n        // 初始化计时器\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        // 初始化计分\r\n        this.score = 0;\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n    },\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        newStar.setLocalZOrder(5)\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 将 Game 组件的实例传入星星组件\r\n        newStar.getComponent('Star').game = this;\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // console.log('=====randX======')\r\n        if(randX>480){randX=randX-50}\r\n        if(randX<-480){randX=randX+50}\r\n        // console.log(randX)\r\n        // 返回星星坐标\r\n        return cc.p(randX, randY);\r\n    },\r\n    start () {\r\n\r\n    },\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n    update (dt) {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    }\r\n});\r\n"]}