{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","touchListener","TOUCH_ONE_BY_ONE","swallowTouches","onTouchBegan","touch","target","getCurrentTarget","locationInNode","convertToNodeSpace","getLocation","s","getContentSize","rect","width","height","console","log","x","y","rectContainsPoint","opacity","onTouchMoved","movePickedHitTile","onTouchEnded","dropTile","checkHit","onLoad","jumpAction","runAction","xSpeed","start","update","dt","Math","abs","stopAllActions"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,gBAAY;AACR;AACAC,oBAAY,CAFJ;AAGR;AACAC,sBAAc,CAJN;AAKR;AACAC,sBAAc,CANN;AAOR;AACAC,eAAO,CARC;AASRC,mBAAW;AACPC,qBAAS,IADF;AAEPC,iBAAKX,GAAGY;AAFD;AATH,KApBP;AAkCLC,mBAAe,yBAAY;AACvB;AACA,YAAIC,SAASd,GAAGe,MAAH,CAAU,KAAKT,YAAf,EAA6BN,GAAGgB,CAAH,CAAK,CAAL,EAAQ,KAAKX,UAAb,CAA7B,EAAuDY,MAAvD,CAA8DjB,GAAGkB,kBAAH,EAA9D,CAAb;AACA;AACA,YAAIC,WAAWnB,GAAGe,MAAH,CAAU,KAAKT,YAAf,EAA6BN,GAAGgB,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKX,UAAd,CAA7B,EAAwDY,MAAxD,CAA+DjB,GAAGoB,iBAAH,EAA/D,CAAf;AACA,YAAIC,WAAWrB,GAAGsB,QAAH,CAAY,KAAKC,aAAjB,EAAgC,IAAhC,CAAf;AACA;AACA,eAAOvB,GAAGwB,aAAH,CAAiBxB,GAAGyB,QAAH,CAAYX,MAAZ,EAAoBK,QAApB,EAA8BE,QAA9B,CAAjB,CAAP;AACH,KA1CI;AA2CLE,mBAAe,yBAAY;AACvB;AACAvB,WAAG0B,WAAH,CAAeC,UAAf,CAA0B,KAAKlB,SAA/B,EAA0C,KAA1C;AACH,KA9CI;AA+CLmB,qBAAiB,2BAAY;AACzB,YAAIC,OAAO,IAAX;AACA;AACA7B,WAAG8B,YAAH,CAAgBC,WAAhB,CAA4B;AACxBC,mBAAOhC,GAAGiC,aAAH,CAAiBC,QADA;AAExB;AACAC,0BAAc,sBAASC,OAAT,EAAkBJ,KAAlB,EAAyB;AACnC,wBAAOI,OAAP;AACI,yBAAKpC,GAAGqC,GAAH,CAAOC,CAAZ;AACIT,6BAAKU,OAAL,GAAe,IAAf;AACAV,6BAAKW,QAAL,GAAgB,KAAhB;AACA;AACJ,yBAAKxC,GAAGqC,GAAH,CAAOI,CAAZ;AACIZ,6BAAKU,OAAL,GAAe,KAAf;AACAV,6BAAKW,QAAL,GAAgB,IAAhB;AACA;AARR;AAUH,aAduB;AAexB;AACAE,2BAAe,uBAASN,OAAT,EAAkBJ,KAAlB,EAAyB;AACpC,wBAAOI,OAAP;AACI,yBAAKpC,GAAGqC,GAAH,CAAOC,CAAZ;AACIT,6BAAKU,OAAL,GAAe,KAAf;AACA;AACJ,yBAAKvC,GAAGqC,GAAH,CAAOI,CAAZ;AACIZ,6BAAKW,QAAL,GAAgB,KAAhB;AACA;AANR;AAQH;AAzBuB,SAA5B,EA0BGX,KAAKc,IA1BR;AA2BH,KA7EI;AA8ELC,mBAAc,yBAAU;AACpB,YAAIf,OAAO,IAAX;AACA;AACA7B,WAAG8B,YAAH,CAAgBC,WAAhB,CAA4B;AACxBC,mBAAOhC,GAAGiC,aAAH,CAAiBY,gBADA;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,4BAAgB,IAVQ,EAUD;;AAEvBC,0BAAa,sBAASC,KAAT,EAAgBhB,KAAhB,EAA0B;AACvC;AACM,oBAAIiB,SAASjB,MAAMkB,gBAAN,EAAb,CADN,CAC8C;AAC1C;AACD,oBAAIC,iBAAiBF,OAAOG,kBAAP,CAA0BJ,MAAMK,WAAN,EAA1B,CAArB;AACE,oBAAIC,IAAIL,OAAOM,cAAP,EAAR;AACD,oBAAIC,OAAOxD,GAAGwD,IAAH,CAAQ,CAAR,EAAW,CAAX,EAAcF,EAAEG,KAAhB,EAAuBH,EAAEI,MAAzB,CAAX;AACAC,wBAAQC,GAAR,CAAY,wBAAZ;AACAD,wBAAQC,GAAR,CAAY,qCAAqCT,eAAeU,CAApD,GAAwD,QAAxD,GAAmEV,eAAeW,CAA9F;AACA,oBAAGX,eAAeU,CAAf,GAAiB,CAApB,EAAsB;AAClBhC,yBAAKU,OAAL,GAAe,KAAf;AACAV,yBAAKW,QAAL,GAAgB,IAAhB;AACH;AACD,oBAAGW,eAAeU,CAAf,GAAiB,CAApB,EAAsB;AAClBhC,yBAAKU,OAAL,GAAe,IAAf;AACAV,yBAAKW,QAAL,GAAgB,KAAhB;AACH;AACF,oBAAIxC,GAAG+D,iBAAH,CAAqBP,IAArB,EAA2BL,cAA3B,CAAJ,EAAgD;AAAQ;AACtDQ,4BAAQC,GAAR,CAAY,yBAAyBT,eAAeU,CAAxC,GAA4C,QAA5C,GAAuDV,eAAeW,CAAlF;AACAb,2BAAOe,OAAP,GAAiB,GAAjB;AACC,2BAAO,IAAP;AACA;AACH,uBAAO,KAAP;AACF,aAnCuB;AAoCxBC,0BAAa,sBAASjB,KAAT,EAAgBhB,KAAhB,EAAyB;AACtC;AACI2B,wBAAQC,GAAR,CAAY,oBAAZ;AACAD,wBAAQC,GAAR,CAAYZ,MAAMK,WAAN,EAAZ;AACAxB,qBAAKqC,iBAAL,CAAuBlB,MAAMK,WAAN,EAAvB;AACA,uBAAO,IAAP;AACH,aA1CuB;;AA4CxBc,0BAAa,sBAASnB,KAAT,EAAgBhB,KAAhB,EAAsB;AACnC;AACI,qBAAKO,OAAL,GAAe,KAAf;AACA,qBAAKC,QAAL,GAAgB,KAAhB;AACAmB,wBAAQC,GAAR,CAAY,oBAAZ;AACAD,wBAAQC,GAAR,CAAYZ,MAAMK,WAAN,EAAZ;AACAxB,qBAAKuC,QAAL,CAAcpB,MAAMK,WAAN,EAAd;AACA,uBAAO,IAAP;AACH;AApDuB,SAA5B,EAqDGxB,KAAKc,IArDR;AAsDH,KAvII;AAwIJ0B,cAAS,kBAASrC,KAAT,EACT;AACE,YAAIiB,SAASjB,MAAMkB,gBAAN,EAAb,CADF,CAC0C;AACtC;AACD,YAAIC,iBAAiBF,OAAOG,kBAAP,CAA0BJ,MAAMK,WAAN,EAA1B,CAArB;AACE,YAAIC,IAAIL,OAAOM,cAAP,EAAR;AACD,YAAIC,OAAOxD,GAAGwD,IAAH,CAAQ,CAAR,EAAW,CAAX,EAAcF,EAAEG,KAAhB,EAAuBH,EAAEI,MAAzB,CAAX;;AAED,YAAI1D,GAAG+D,iBAAH,CAAqBP,IAArB,EAA2BL,cAA3B,CAAJ,EAAgD;AAAQ;AACtDQ,oBAAQC,GAAR,CAAY,yBAAyBT,eAAeU,CAAxC,GAA4C,QAA5C,GAAuDV,eAAeW,CAAlF;AACAb,mBAAOe,OAAP,GAAiB,GAAjB;AACC,mBAAO,IAAP;AACA;AACH,eAAO,KAAP;AACH,KAtJI;AAuJLM,YAAQ,kBAAY;AAChB;AACA,aAAKC,UAAL,GAAkB,KAAK1D,aAAL,EAAlB;AACA,aAAK8B,IAAL,CAAU6B,SAAV,CAAoB,KAAKD,UAAzB;AACQ;AACA,aAAKhC,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA;AACA,aAAKiC,MAAL,GAAc,CAAd;;AAEA;AACA,aAAK7C,eAAL;AACA,aAAKgB,aAAL;AACX,KApKI;AAqKL;;AAEA;;AAEA8B,SAzKK,mBAyKI,CAER,CA3KI;;AA4KLC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKrC,OAAT,EAAkB;AACd,iBAAKkC,MAAL,IAAe,KAAKjE,KAAL,GAAaoE,EAA5B;AACH,SAFD,MAEO,IAAI,KAAKpC,QAAT,EAAmB;AACtB,iBAAKiC,MAAL,IAAe,KAAKjE,KAAL,GAAaoE,EAA5B;AACH;AACD;AACA,YAAKC,KAAKC,GAAL,CAAS,KAAKL,MAAd,IAAwB,KAAKlE,YAAlC,EAAiD;AAC7C;AACA;AACA,iBAAKkE,MAAL,GAAc,KAAKlE,YAAL,GAAoB,KAAKkE,MAAzB,GAAkCI,KAAKC,GAAL,CAAS,KAAKL,MAAd,CAAhD;AACH;;AAED;AACA,aAAK9B,IAAL,CAAUkB,CAAV,IAAe,KAAKY,MAAL,GAAcG,EAA7B;AACA;AACA;AACA,YAAG,KAAKjC,IAAL,CAAUkB,CAAV,GAAY,GAAf,EAAmB;AACX;AACA,iBAAKtB,OAAL,GAAe,KAAf;AACA,iBAAKC,QAAL,GAAgB,KAAhB;AACA,iBAAKG,IAAL,CAAUkB,CAAV,GAAY,KAAKlB,IAAL,CAAUkB,CAAV,GAAY,CAAxB;AACA;AACA,iBAAKY,MAAL,GAAc,CAAd;AACP;AACD,YAAG,KAAK9B,IAAL,CAAUkB,CAAV,GAAY,CAAC,GAAhB,EAAoB;AACZ;AACA,iBAAKtB,OAAL,GAAe,KAAf;AACA,iBAAKC,QAAL,GAAgB,KAAhB;AACA,iBAAKG,IAAL,CAAUkB,CAAV,GAAY,KAAKlB,IAAL,CAAUkB,CAAV,GAAY,CAAxB;AACA;AACA,iBAAKY,MAAL,GAAc,CAAd;AACP;AACJ,KA9MI;AA+MLM,kBA/MK,4BA+MW;AACZpB,gBAAQC,GAAR,CAAY,0BAAZ;AACH;AACD;;AAlNK,CAAT","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    // properties: {\r\n    //     // foo: {\r\n    //     //     // ATTRIBUTES:\r\n    //     //     default: null,        // The default value will be used only when the component attaching\r\n    //     //                           // to a node for the first time\r\n    //     //     type: cc.SpriteFrame, // optional, default is typeof default\r\n    //     //     serializable: true,   // optional, default is true\r\n    //     // },\r\n    //     // bar: {\r\n    //     //     get () {\r\n    //     //         return this._bar;\r\n    //     //     },\r\n    //     //     set (value) {\r\n    //     //         this._bar = value;\r\n    //     //     }\r\n    //     // },\r\n    // },\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        jumpAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        },\r\n    },\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n            onKeyPressed: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            // 松开按键时，停止向该方向的加速\r\n            onKeyReleased: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        }, self.node);\r\n    },\r\n    touchListener:function(){\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            //     5 可选event类型列表:\r\n            //     6 \r\n            //     7 cc.EventListener.TOUCH_ONE_BY_ONE (单点触摸)\r\n            //     8 cc.EventListener.TOUCH_ALL_AT_ONCE (多点触摸)\r\n            //     9 cc.EventListener.KEYBOARD (键盘)\r\n            //    10 cc.EventListener.MOUSE (鼠标)\r\n            //    11 cc.EventListener.ACCELERATION (加速计)\r\n            //    12 cc.EventListener.CUSTOM (自定义)\r\n            swallowTouches: true,　　// 设置是否吞没事件，在 onTouchBegan 方法返回 true 时吞掉事件，不再向下传递。\r\n\r\n            onTouchBegan:function(touch, event)    //实现 onTouchBegan 事件处理回调函数\r\n            {\r\n                　　var target = event.getCurrentTarget();  // 获取事件所绑定的 target, 通常是cc.Node及其子类 \r\n                // 获取当前触摸点相对于按钮所在的坐标\r\n               var locationInNode = target.convertToNodeSpace(touch.getLocation());    \r\n                 var s = target.getContentSize();\r\n                var rect = cc.rect(0, 0, s.width, s.height);\r\n                console.log('======onTouchBegan====');\r\n                console.log(\"onTouchBegansprite began... x = \" + locationInNode.x + \", y = \" + locationInNode.y);\r\n                if(locationInNode.x>0){\r\n                    self.accLeft = false;\r\n                    self.accRight = true;\r\n                }\r\n                if(locationInNode.x<0){\r\n                    self.accLeft = true;\r\n                    self.accRight = false;\r\n                }\r\n               if (cc.rectContainsPoint(rect, locationInNode)) {       // 判断触摸点是否在按钮范围内\r\n                 console.log(\"sprite began... x = \" + locationInNode.x + \", y = \" + locationInNode.y);\r\n                 target.opacity = 180;\r\n                  return true;\r\n                 }\r\n               return false;\r\n            },\r\n            onTouchMoved:function(touch, event)   //实现onTouchMoved事件处理回调函数, 触摸移动时触发\r\n            {\r\n                console.log('===onTouchMoved===')\r\n                console.log(touch.getLocation())\r\n                self.movePickedHitTile(touch.getLocation());\r\n                return true;\r\n            },\r\n        \r\n            onTouchEnded:function(touch, event)// 实现onTouchEnded事件处理回调函数\r\n            {\r\n                this.accLeft = false;\r\n                this.accRight = false;\r\n                console.log('===onTouchEnded===')\r\n                console.log(touch.getLocation())\r\n                self.dropTile(touch.getLocation());\r\n                return true;\r\n            }\r\n        }, self.node);\r\n    },\r\n     checkHit:function(event)\r\n     {\r\n     　　var target = event.getCurrentTarget();  // 获取事件所绑定的 target, 通常是cc.Node及其子类 \r\n         // 获取当前触摸点相对于按钮所在的坐标\r\n        var locationInNode = target.convertToNodeSpace(touch.getLocation());    \r\n          var s = target.getContentSize();\r\n         var rect = cc.rect(0, 0, s.width, s.height);\r\n     \r\n        if (cc.rectContainsPoint(rect, locationInNode)) {       // 判断触摸点是否在按钮范围内\r\n          console.log(\"sprite began... x = \" + locationInNode.x + \", y = \" + locationInNode.y);\r\n          target.opacity = 180;\r\n           return true;\r\n          }\r\n        return false;\r\n    },\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n                // 加速度方向开关\r\n                this.accLeft = false;\r\n                this.accRight = false;\r\n                // 主角当前水平方向速度\r\n                this.xSpeed = 0;\r\n        \r\n                // 初始化键盘输入监听\r\n                this.setInputControl();\r\n                this.touchListener();\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            //如果速度达到极限，使用最大速度与当前方向。\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n        // console.log('======update=====')\r\n        // console.log(this.node.x)\r\n        if(this.node.x>480){\r\n                // 加速度方向开关\r\n                this.accLeft = false;\r\n                this.accRight = false;\r\n                this.node.x=this.node.x-1;\r\n                // 主角当前水平方向速度\r\n                this.xSpeed = 0;\r\n        }\r\n        if(this.node.x<-480){\r\n                // 加速度方向开关\r\n                this.accLeft = false;\r\n                this.accRight = false;\r\n                this.node.x=this.node.x+1;\r\n                // 主角当前水平方向速度\r\n                this.xSpeed = 0;\r\n        }\r\n    },\r\n    stopAllActions(){\r\n        console.log('=======stopAllActions===')\r\n    }\r\n    // update (dt) {},\r\n});\r\n"]}